### Условия задачи

В компании "Мир Будущего" разработали новую платформу для управления данными о пользователях.
Вам поручено создать модуль, который обеспечит корректное создание объектов пользователей с
учётом строгих критериев валидации. Это поможет избежать ошибок при обработке данных и
сохранить целостность информации.

### Цель:

Создать класс пользователя с конструктором, который выполняет валидацию входных данных
на основе заранее определённых критериев. Программа должна демонстрировать использование
статических констант, множеств (Set), проверки условий и обработки исключений.

### Требования:

1️⃣ Создайте класс User, который представляет пользователя и содержит следующие поля:

- name — имя пользователя.

- age — возраст пользователя.

- job — место работы.

- address — адрес.


2️⃣ Объявите и инициализируйте статические константы:

- VALID_JOBS — набор допустимых мест работы, содержащий строки: "Google", "Uber", "Amazon".

- VALID_ADDRESSES — набор допустимых адресов, содержащий строки: "London", "New York", "Amsterdam".


3️⃣ Создайте конструктор в классе User, который принимает значения для всех полей и выполняет
 валидацию входных данных:

- Имя не может быть пустым.

- Возраст не может быть меньше 18.

- Место работы должно содержаться в наборе VALID_JOBS.

- Адрес должен содержаться в наборе VALID_ADDRESSES.


4️⃣ Если хотя бы одно из условий не выполняется, конструктор должен выбросить
IllegalArgumentException с описанием ошибки.

5️⃣ Если все условия выполняются, конструктор должен сохранять значения в соответствующих полях.

### Почему эта задача полезна?

Создание конструктора с валидацией данных позволяет глубже понять принципы работы с классами
и конструкторами в Java, а также продемонстрировать важность обеспечения целостности данных
через строгую проверку условий. Использование статических констант и наборов (Set)
подчёркивает важность организации кода и позволяет эффективно управлять допустимыми значениями.
Эта задача также акцентирует внимание на обработке исключений и важности передачи информативных
сообщений, что способствует созданию более устойчивых и надёжных приложений.

Темы: ООП, интерфейс Set, статические константы, исключения, валидация
