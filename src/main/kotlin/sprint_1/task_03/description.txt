Цель:

Создать иерархию классов для персонажей игры с использованием наследования и полиморфизма. В задаче рассматривается создание абстрактного класса, наследников с уникальными особенностями и механизма взаимодействия между персонажами через полиморфизм.

### Требования:

1️⃣Создать абстрактный класс **Character** со следующими полями:

- Имя;

- Сила;

- Ловкость;

- Интеллект;

- Здоровье. У всех персонажей по умолчанию 100.


2️⃣ Сделать в Character два конструктора: один принимает только имя (и присваивает базовые значения характеристикам: 5 для силы, ловкости и интеллекта, что делает его универсальным персонажем, подходящим для начальных этапов игры), а другой все доступные параметры, кроме здоровья — оно имеет значение по умолчанию.

3️⃣ Создать классы-наследники от Character: Warrior и Archer. Переопределить их конструкторы:

- для Warrior сила всегда выставляется в 10, ловкость в 5, интеллект в 3. Имя передаётся извне;

- для Archer сила всегда выставляется в 3, ловкость в 10, интеллект в 5. Имя передаётся извне.


4️⃣ Сделайте в **Character** абстрактный метод **attack**, который принимает другого персонажа (**Character opponent**) в качестве параметра.

5️⃣ Переопределите метод **attack** в классах-наследниках:

- В **Warrior** персонаж наносит противнику урон, равный значению своей силы (**strength**). У противника уменьшается здоровье (**health**) на это значение.

- В **Archer** персонаж наносит противнику урон, равный значению своей ловкости (**agility**). У противника уменьшается здоровье на это значение.


**Важно**: Здоровье противника не может стать меньше 0. Эту проверку следует вынести в общий метод родительского класса.

**Замечание**: для доступа к полям, нужно добавить им соответствующий модификатор доступа в абстрактном классе.